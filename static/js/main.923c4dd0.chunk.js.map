{"version":3,"sources":["img/avatar.svg","components/CvField.js","components/CvFieldForm.js","components/Sidebar.js","components/NameComponent.js","components/NameForm.js","components/Content.js","App.js","index.js"],"names":["CvField","props","title","data","fieldItems","Object","keys","map","key","detail","replace","str","toUpperCase","className","uniqid","id","onClick","toggleEdit","data-cvfield","CvFieldForm","this","handleEdit","fieldItemInputs","idx","type","onChange","name","value","onSubmit","style","marginTop","Component","Sidebar","state","isEditing","contact","address","phone","email","bind","event","preventDefault","CvFieldName","currentTarget","dataset","cvfield","console","log","setState","prevState","target","fieldInputName","src","avatar","alt","NameComponent","fullname","NameForm","required","Content","education","school","degree","major","graduationYear","workExperience","employer","jobTitle","startDate","endDate","handleEducationEdit","handleExperienceEdit","handleFullNameEdit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.923c4dd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.1c3a0ba3.svg\";","import React from 'react';\nimport uniqid from 'uniqid';\n\nconst CvField = (props) => {\n  const { title, data } = props;\n\n  const fieldItems = Object.keys(data).map((key) => {\n    //converting camelCase to Camel Case\n    const detail = key\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, (str) => str.toUpperCase());\n\n    return (\n      <div key={uniqid()}>\n        <h4 className=\"cv-detail\">{detail}</h4>\n        <p>{data[key]}</p>\n      </div>\n    );\n  });\n  return (\n    <div id={title} className=\"cv-field\">\n      <div className=\"cv-field-title\">\n        <h2>\n          {title\n            .replace(/([A-Z])/g, ' $1')\n            .replace(/^./, (str) => str.toUpperCase())}\n        </h2>\n        <button\n          className=\"edit-btn\"\n          onClick={props.toggleEdit}\n          data-cvfield={title}\n        >\n          <i className=\"far fa-edit\"></i>\n        </button>\n      </div>\n      {fieldItems}\n    </div>\n  );\n};\n\nexport default CvField;\n","import React, { Component } from 'react';\n\nclass CvFieldForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, data, toggleEdit, handleEdit } = this.props;\n\n    const fieldItemInputs = Object.keys(data).map((key, idx) => {\n      //converting camelCase to Camel Case\n      const detail = key\n        .replace(/([A-Z])/g, ' $1')\n        .replace(/^./, (str) => str.toUpperCase());\n      /* uniqid() will not work as quickly as it needs to in order\n      to have unique keys for each <div>. Will use array index instead. */\n      // proof: console.log(uniqid());\n      return (\n        <div key={idx}>\n          <label className=\"cv-detail\">\n            {detail}\n            <input\n              type=\"text\"\n              onChange={handleEdit}\n              name={key}\n              value={data[key]}\n            ></input>\n          </label>\n        </div>\n      );\n    });\n\n    return (\n      <form\n        className=\"cv-field-form\"\n        onSubmit={toggleEdit}\n        data-cvfield={title}\n      >\n        <div className=\"cv-field-title\">\n          <h2>\n            {title\n              .replace(/([A-Z])/g, ' $1')\n              .replace(/^./, (str) => str.toUpperCase())}\n          </h2>\n        </div>\n        {fieldItemInputs}\n        <button style={{ marginTop: '10px' }} className=\"submit-btn\">\n          SUBMIT\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default CvFieldForm;\n","import React, { Component } from 'react';\nimport avatar from './../img/avatar.svg';\nimport CvField from './CvField';\nimport CvFieldForm from './CvFieldForm';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: {\n        contact: false,\n      },\n      contact: {\n        address: '2101 E NASA Pkwy, Houston, TX 77058, United States',\n        phone: '+57 3015131394',\n        email: 'raymansell@outlook.com',\n      },\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  toggleEdit(event) {\n    if (event.type === 'submit') {\n      event.preventDefault();\n    }\n    /* The only available option for CvFieldName in this component\n    is 'contact'. CvFieldName is used to dinamically access state\n    in case we want to add more <CvField />'s to the Sidebar [e.g Certificates (this.state.certificates),\n    Languages (this.state.languages), etc]. CvFieldName is being passed as a data-attr from either \n    the edit <button> tag of the CvField component, or from the \n    <form> tag of the CvFieldForm component.\n    */\n    const CvFieldName = event.currentTarget.dataset.cvfield;\n    console.log(CvFieldName);\n\n    this.setState((prevState) => {\n      return {\n        isEditing: {\n          ...prevState.isEditing,\n          [CvFieldName]: !prevState.isEditing[CvFieldName],\n        },\n      };\n    });\n  }\n\n  handleEdit(event) {\n    // lo que pudo ser y no fue parte 1\n    // const CvFieldName = event.currentTarget.dataset.cvfield;\n\n    /* fieldInputName  refers to 'address', 'phone' or 'email'\n    in the case of CvFieldName === 'contact'\n    */\n    const { name: fieldInputName, value } = event.target;\n\n    this.setState((prevState) => {\n      // lo que pudo ser y no fue parte 2\n      // return {\n      //   [CvFieldName]: {\n      //     ...prevState[CvFieldName],\n      //     [fieldInputName]: value,\n      //   },\n      // };\n      return {\n        contact: {\n          ...prevState.contact,\n          [fieldInputName]: value,\n        },\n      };\n    });\n  }\n\n  render() {\n    const { isEditing } = this.state;\n    return (\n      <div className=\"sidebar\">\n        <img src={avatar} alt=\"avatar\" className=\"avatar\" />\n        {isEditing.contact ? (\n          <CvFieldForm\n            title=\"contact\"\n            data={this.state.contact}\n            handleEdit={this.handleEdit}\n            toggleEdit={this.toggleEdit}\n          />\n        ) : (\n          <CvField\n            title=\"contact\"\n            data={this.state.contact}\n            toggleEdit={this.toggleEdit}\n          />\n        )}\n        {/* <p>{this.state.isEditing.contact.toString()}</p>\n        <p>{this.state.contact.address}</p>\n        <p>{this.state.contact.phone}</p>\n        <p>{this.state.contact.email}</p> */}\n      </div>\n    );\n  }\n}\nexport default Sidebar;\n","import React from 'react';\n\nconst NameComponent = (props) => {\n  return (\n    <div className=\"name\">\n      <h1>{props.fullname}</h1>\n      <button\n        className=\"edit-btn\"\n        onClick={props.toggleEdit}\n        data-cvfield=\"fullname\"\n      >\n        <i className=\"far fa-edit\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default NameComponent;\n","import React, { Component } from 'react';\n\nclass NameForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { fullname, handleEdit, toggleEdit } = this.props;\n    return (\n      <form\n        className=\"name name-form\"\n        onSubmit={toggleEdit}\n        data-cvfield=\"fullname\"\n      >\n        <input type=\"text\" value={fullname} onChange={handleEdit} required />\n        <button className=\"submit-btn\">SUBMIT</button>\n      </form>\n    );\n  }\n}\n\nexport default NameForm;\n","import React, { Component } from 'react';\nimport NameComponent from './NameComponent';\nimport NameForm from './NameForm';\nimport CvField from './CvField';\nimport CvFieldForm from './CvFieldForm';\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: 'RAYMOND MANSELL',\n      education: {\n        school: 'Universidad Industrial de Santander',\n        degree: 'Bachelor of Science',\n        major: 'Mathematics',\n        graduationYear: '2020-06',\n      },\n      workExperience: {\n        employer: 'Massachusetts General Hospital',\n        jobTitle: 'Emergency Medicine Physician',\n        startDate: '2016-09',\n        endDate: '2019-12',\n      },\n      isEditing: {\n        fullname: false,\n        education: false,\n        workExperience: false,\n      },\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n\n    // this.handleEdit = this.handleEdit.bind(this);\n    this.handleEducationEdit = this.handleEducationEdit.bind(this);\n    this.handleExperienceEdit = this.handleExperienceEdit.bind(this);\n    this.handleFullNameEdit = this.handleFullNameEdit.bind(this);\n  }\n\n  toggleEdit(event) {\n    if (event.type === 'submit') {\n      event.preventDefault();\n    }\n    const CvFieldName = event.currentTarget.dataset.cvfield;\n\n    this.setState((prevState) => {\n      return {\n        isEditing: {\n          ...prevState.isEditing,\n          [CvFieldName]: !prevState.isEditing[CvFieldName],\n        },\n      };\n    });\n  }\n\n  handleFullNameEdit(event) {\n    const { value } = event.target;\n    this.setState((prevState) => {\n      return {\n        fullname: value,\n      };\n    });\n  }\n\n  handleEducationEdit(event) {\n    const { name: fieldInputName, value } = event.target;\n    this.setState((prevState) => {\n      return {\n        education: {\n          ...prevState.education,\n          [fieldInputName]: value,\n        },\n      };\n    });\n  }\n\n  handleExperienceEdit(event) {\n    const { name: fieldInputName, value } = event.target;\n    this.setState((prevState) => {\n      return {\n        workExperience: {\n          ...prevState.workExperience,\n          [fieldInputName]: value,\n        },\n      };\n    });\n  }\n\n  render() {\n    const { isEditing } = this.state;\n    return (\n      <div className=\"content\">\n        {isEditing.fullname ? (\n          <NameForm\n            fullname={this.state.fullname}\n            handleEdit={this.handleFullNameEdit}\n            toggleEdit={this.toggleEdit}\n          />\n        ) : (\n          <NameComponent\n            fullname={this.state.fullname}\n            toggleEdit={this.toggleEdit}\n          />\n        )}\n        {/* <p>\n          {this.state.fullname} {this.state.isEditing.fullname.toString()}\n        </p> */}\n        <div className=\"subcontent\">\n          {isEditing.education ? (\n            <CvFieldForm\n              title=\"education\"\n              data={this.state.education}\n              handleEdit={this.handleEducationEdit}\n              toggleEdit={this.toggleEdit}\n            />\n          ) : (\n            <CvField\n              title=\"education\"\n              data={this.state.education}\n              toggleEdit={this.toggleEdit}\n            />\n          )}\n          {/* <div>\n            <p>{this.state.isEditing.education.toString()}</p>\n            <p>{this.state.education.school}</p>\n            <p>{this.state.education.degree}</p>\n            <p>{this.state.education.major}</p>\n            <p>{this.state.education.graduationYear}</p>\n          </div> */}\n          {isEditing.workExperience ? (\n            <CvFieldForm\n              title=\"workExperience\"\n              data={this.state.workExperience}\n              handleEdit={this.handleExperienceEdit}\n              toggleEdit={this.toggleEdit}\n            />\n          ) : (\n            <CvField\n              title=\"workExperience\"\n              data={this.state.workExperience}\n              toggleEdit={this.toggleEdit}\n            />\n          )}\n          {/* <div>\n            <p>{this.state.isEditing.workExperience.toString()}</p>\n            <p>{this.state.workExperience.employer}</p>\n            <p>{this.state.workExperience.jobTitle}</p>\n            <p>{this.state.workExperience.startDate}</p>\n            <p>{this.state.experience.endDate}</p>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\n\nconst App = () => {\n  return (\n    <section className=\"container\">\n      <Sidebar />\n      <Content />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}